{"ast":null,"code":"import React from 'react';\nclass Api {\n  constructor(config) {\n    this._link = config.baseUrl, this._headers = config.headers;\n  }\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Error ${res.status} ${res.statusText}`);\n  }\n  getInitialCards() {\n    return fetch(`${this._link}/cards`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  getUserFromServer() {\n    return fetch(`${this._link}/users/me`, {\n      method: 'GET',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  setNewUserInfo(data) {\n    return fetch(`${this._link}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.username,\n        about: data.occupation\n      })\n    }).then(this._checkResponse);\n  }\n  deleteCard(cardId) {\n    return fetch(`${this._link}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  addCard(data) {\n    return fetch(`${this._link}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(this._checkResponse);\n  }\n  deleteLike(cardId) {\n    return fetch(`${this._link}/cards/${cardId}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  addLike(cardId) {\n    return fetch(`${this._link}/cards/${cardId}/likes`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  addNewAvatar(data) {\n    return fetch(`${this._link}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(this._checkResponse);\n  }\n}\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-72\",\n  headers: {\n    authorization: \"ee9de7f6-7aed-4e20-b5bf-f52e55007fe4\",\n    \"Content-type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"names":["React","Api","constructor","config","_link","baseUrl","_headers","headers","_checkResponse","res","ok","json","Promise","reject","status","statusText","getInitialCards","fetch","method","then","getUserFromServer","setNewUserInfo","data","body","JSON","stringify","name","username","about","occupation","deleteCard","cardId","addCard","link","deleteLike","addLike","addNewAvatar","avatar","api","authorization"],"sources":["/Users/litvacpaul/Desktop/mesto-react/mesto-react/src/utils/Api.js"],"sourcesContent":["import React from 'react'\n\nclass Api { \n    constructor(config){ \n        this._link = config.baseUrl,\n        this._headers = config.headers\n    }\n\n    _checkResponse(res){\n        if(res.ok){ \n            return res.json()\n        }\n        return Promise.reject(`Error ${res.status} ${res.statusText}`)\n    }\n\n    getInitialCards(){ \n      return fetch(`${this._link}/cards`, {\n            method: 'GET',\n            headers: this._headers\n          })\n          .then(this._checkResponse)\n    }\n\n    getUserFromServer(){\n        return fetch(`${this._link}/users/me`, { \n            method: 'GET',\n            headers: this._headers,\n        })\n        .then(this._checkResponse)\n    }\n\n    setNewUserInfo(data){\n       return fetch(`${this._link}/users/me`, { \n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: data.username,\n                about: data.occupation\n            }) \n        })\n        .then(this._checkResponse)\n    }\n\n    deleteCard(cardId){\n       return fetch(`${this._link}/cards/${cardId}`, {\n            method: 'DELETE',\n            headers: this._headers,\n        })\n        .then(this._checkResponse)\n    }\n\n    addCard(data){\n        return fetch(`${this._link}/cards`, { \n            method: 'POST',\n            headers: this._headers,\n  body: JSON.stringify({\n    name: data.name,\n    link: data.link\n  })\n    })\n    .then(this._checkResponse)\n}\n\ndeleteLike(cardId){\n    return fetch(`${this._link}/cards/${cardId}/likes`, { \n        method: 'DELETE',\n        headers: this._headers\n    })\n    .then(this._checkResponse)\n}\n\naddLike(cardId){\nreturn fetch(`${this._link}/cards/${cardId}/likes`, { \n    method: 'PUT',\n    headers: this._headers\n})\n.then(this._checkResponse)\n}\n\naddNewAvatar(data){ \n    return fetch(`${this._link}/users/me/avatar`, { \n        method: 'PATCH',\n    headers: this._headers,\n    body: JSON.stringify({\n        avatar: data.avatar\n    })   \n    })\n    .then(this._checkResponse)\n\n}\n}\n\nconst api = new Api({\n    baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-72\",\n    headers: {\n      authorization: \"ee9de7f6-7aed-4e20-b5bf-f52e55007fe4\",\n      \"Content-type\": \"application/json\",\n    },\n  })\n\nexport default api"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}