{"ast":null,"code":"import _classCallCheck from\"/Users/litvacpaul/Desktop/react-mesto-auth/react-mesto-auth/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/litvacpaul/Desktop/react-mesto-auth/react-mesto-auth/node_modules/@babel/runtime/helpers/esm/createClass.js\";var Api=/*#__PURE__*/function(){function Api(config){_classCallCheck(this,Api);this._link=config.baseUrl;this._headers=config.headers;}_createClass(Api,[{key:\"_checkResponse\",value:function _checkResponse(res){if(res.ok){return res.json();}return Promise.reject(\"Error \".concat(res.status,\" \").concat(res.statusText));}},{key:\"getInitialCards\",value:function getInitialCards(){return fetch(\"\".concat(this._link,\"/cards\"),{method:\"GET\",headers:this._headers}).then(this._checkResponse);}},{key:\"getUserFromServer\",value:function getUserFromServer(){return fetch(\"\".concat(this._link,\"/users/me\"),{method:\"GET\",headers:this._headers}).then(this._checkResponse);}},{key:\"setNewUserInfo\",value:function setNewUserInfo(data){return fetch(\"\".concat(this._link,\"/users/me\"),{method:\"PATCH\",headers:this._headers,body:JSON.stringify({name:data.name,about:data.about})}).then(this._checkResponse);}},{key:\"deleteCard\",value:function deleteCard(cardId){return fetch(\"\".concat(this._link,\"/cards/\").concat(cardId),{method:\"DELETE\",headers:this._headers}).then(this._checkResponse);}},{key:\"addCard\",value:function addCard(data){return fetch(\"\".concat(this._link,\"/cards\"),{method:\"POST\",headers:this._headers,body:JSON.stringify({name:data.name,link:data.link})}).then(this._checkResponse);}},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(cardId,isLiked){if(isLiked){return fetch(\"\".concat(this._link,\"/cards/\").concat(cardId,\"/likes\"),{method:\"PUT\",headers:this._headers}).then(this._checkResponse);}else{return fetch(\"\".concat(this._link,\"/cards/\").concat(cardId,\"/likes\"),{method:\"DELETE\",headers:this._headers}).then(this._checkResponse);}}},{key:\"addNewAvatar\",value:function addNewAvatar(data){return fetch(\"\".concat(this._link,\"/users/me/avatar\"),{method:\"PATCH\",headers:this._headers,body:JSON.stringify({avatar:data.avatar})}).then(this._checkResponse);}}]);return Api;}();var api=new Api({baseUrl:\"https://mesto.nomoreparties.co/v1/cohort-72\",headers:{authorization:\"ee9de7f6-7aed-4e20-b5bf-f52e55007fe4\",\"Content-type\":\"application/json\"}});export default api;","map":{"version":3,"names":["Api","config","_classCallCheck","_link","baseUrl","_headers","headers","_createClass","key","value","_checkResponse","res","ok","json","Promise","reject","concat","status","statusText","getInitialCards","fetch","method","then","getUserFromServer","setNewUserInfo","data","body","JSON","stringify","name","about","deleteCard","cardId","addCard","link","changeLikeCardStatus","isLiked","addNewAvatar","avatar","api","authorization"],"sources":["/Users/litvacpaul/Desktop/react-mesto-auth/react-mesto-auth/src/utils/Api.js"],"sourcesContent":["class Api {\n  constructor(config) {\n    this._link = config.baseUrl;\n    this._headers = config.headers;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Error ${res.status} ${res.statusText}`);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._link}/cards`, {\n      method: \"GET\",\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n\n  getUserFromServer() {\n    return fetch(`${this._link}/users/me`, {\n      method: \"GET\",\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n\n  setNewUserInfo(data) {\n    return fetch(`${this._link}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about,\n      }),\n    }).then(this._checkResponse);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._link}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then(this._checkResponse);\n  }\n\n  addCard(data) {\n    return fetch(`${this._link}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link,\n      }),\n    }).then(this._checkResponse);\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    if (isLiked) {\n      return fetch(`${this._link}/cards/${cardId}/likes`, {\n        method: \"PUT\",\n        headers: this._headers,\n      }).then(this._checkResponse);\n    } else {\n      return fetch(`${this._link}/cards/${cardId}/likes`, {\n        method: \"DELETE\",\n        headers: this._headers,\n      }).then(this._checkResponse);\n    }\n  }\n\n  addNewAvatar(data) {\n    return fetch(`${this._link}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar,\n      }),\n    }).then(this._checkResponse);\n  }\n}\n\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-72\",\n  headers: {\n    authorization: \"ee9de7f6-7aed-4e20-b5bf-f52e55007fe4\",\n    \"Content-type\": \"application/json\",\n  },\n});\n\nexport default api;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}